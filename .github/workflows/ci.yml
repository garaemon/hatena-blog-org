name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.18', '1.19', '1.20', '1.21', '1.22', '1.23', '1.24']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: false

    - name: Install pandoc
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc

    - name: Verify dependencies
      run: |
        go version
        pandoc --version

    - name: Run tests
      run: go test -v ./...

    - name: Run tests with race detector
      run: go test -race -short ./...

    - name: Build
      run: go build -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Run go fmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          gofmt -s -l .
          exit 1
        fi

  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Build binary
      run: |
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o hatena-blog-org-${{ matrix.goos }}-${{ matrix.goarch }} .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hatena-blog-org-${{ matrix.goos }}-${{ matrix.goarch }}
        path: hatena-blog-org-${{ matrix.goos }}-${{ matrix.goarch }}
